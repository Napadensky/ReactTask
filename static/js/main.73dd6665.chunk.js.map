{"version":3,"sources":["components/Task.js","components/Tasks.js","components/TaskForm.js","components/Posts.js","App.js","index.js"],"names":["Task","fontSize","color","this","props","task","done","textDecoration","style","Sc","title","description","id","type","onChange","checkDone","bind","btDelete","onClick","deleteTask","Component","background","border","padding","borderRadius","cursor","Tasks","tasks","map","key","TaskFrom","state","descripcion","onSubmit","e","addTask","preventDefault","setState","target","name","value","placeholder","Posts","posts","fetch","res","json","data","console","log","post","body","App","newTask","length","newTasks","filter","className","to","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.73dd6665.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport './task.css'\r\n\r\nclass Task extends Component {\r\n\r\n    Sc(){\r\n        return {\r\n            fontSize: '20px',\r\n            color: this.props.task.done ? 'gray' : 'black',\r\n            textDecoration: this.props.task.done ? 'line-through' : 'none',\r\n        }\r\n     }\r\n        \r\n    render() {\r\n        const {task} = this.props;\r\n\r\n        return <p style={this.Sc()}>\r\n            { task.title } -\r\n            { task.description } -\r\n            { task.done } - \r\n            { task.id }\r\n            <input type = \"checkbox\" onChange = {this.props.checkDone.bind(this, task.id)}/>\r\n            <button style = {btDelete} onClick = {this.props.deleteTask.bind(this, task.id)}>\r\n                X\r\n            </button>\r\n        </p>\r\n    }\r\n\r\n}\r\n\r\n\r\nconst btDelete = {\r\n    fontSize: '18px',\r\n    background: '#ea2027',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '10px 15px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n}\r\n\r\nTask.propTypes = {\r\n    task: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Task from './Task';\r\n\r\n\r\nclass Tasks extends Component{\r\n    render() {\r\n        return   this.props.tasks.map(task => \r\n        <Task \r\n            task = {task} \r\n            key = {task.id} \r\n            deleteTask = { this.props.deleteTask } \r\n            checkDone = {this.props.checkDone}\r\n        /> );\r\n        }\r\n    }\r\n\r\n    Tasks.propTypes = {\r\n        tasks: PropTypes.array.isRequired\r\n    }\r\n\r\nexport default Tasks;","import React, { Component } from 'react';\r\n\r\nexport default class TaskFrom extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        descripcion: '',\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        this.props.addTask(this.state.title, this.state.descripcion);\r\n        e.preventDefault();\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <form onSubmit={this.onSubmit}>\r\n                <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                placeholder=\"Escribe una tarea\" \r\n                onChange={this.onChange} \r\n                value={this.state.title} />\r\n                <br/>\r\n                <br/>\r\n                <textarea \r\n                name=\"descripcion\" \r\n                placeholder=\"Escribe una descripcion\" \r\n                onChange={this.onChange} \r\n                value={this.state.descripcion} />\r\n                <p><input type=\"submit\" /></p>\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Posts extends Component {\r\n\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n        const data = await res.json();\r\n        this.setState({posts: data})\r\n        console.log(data);        \r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Posts</h1>\r\n                {\r\n                    this.state.posts.map(post => {\r\n                        return <div key={post.id}>\r\n                            <h1>{post.title}</h1>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                    })                \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport './App.css';\n\nimport tasks from './sample/tasks.json';\n\n// Componenetes\nimport Tasks from './components/Tasks';\nimport TaskFrom from './components/TaskForm';\nimport Posts from './components/Posts'\n\nclass App extends Component {\n\n  state = {\n    tasks: tasks\n  }\n\n  addTask = (title, description) => {\n    const newTask = {\n      title: title,\n      description: description,\n      id: this.state.tasks.length,\n    }\n    this.setState({\n      tasks: [...this.state.tasks, newTask]\n    })\n  }\n\n  deleteTask = (id) => {\n    const newTasks = this.state.tasks.filter( task => task.id !== id );\n    this.setState({tasks: newTasks})\n  }\n\n  checkDone = (id) => {\n    const newTasks = this.state.tasks.map(task => {\n      if (task.id === id) {\n        task.done = !task.done\n      }\n      return task;\n    })\n    this.setState({tasks: newTasks})\n  }\n\n  render(){\n\n    return <div className= \"App\">\n      <Router>\n\n            <Link to=\"/\"><p>INICIO</p></Link>\n            <Link to=\"/Posts\"><p>POSTS</p></Link>\n            <Route exact path=\"/\" render={() =>{\n                  return <div>\n                      <TaskFrom addTask={this.addTask} />\n                      <Tasks tasks={this.state.tasks} \n                      deleteTask={this.deleteTask} \n                      checkDone={this.checkDone}/>\n                  </div>\n            }}>\n            </Route>\n          <Route path=\"/posts\" component={Posts} />\n      </Router>\n\n      </div>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}